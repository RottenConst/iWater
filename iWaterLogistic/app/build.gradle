plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    signingConfigs {
        release {
            storeFile file('C:\\Users\\Satan\\AndroidStudioProjects\\iWaterLogistic-old\\iWaterKey.jks')
            storePassword 'endipskov'
            keyAlias 'iWater'
            keyPassword 'EnDiCoMp666'
        }
    }
    compileSdkVersion 33
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId 'ru.iwater.yourwater.iwaterlogistic'
        vectorDrawables.useSupportLibrary = true
        minSdkVersion 19
        targetSdkVersion 33
        versionCode 45
        versionName "4.3.3"
        manifestPlaceholders = [ GOOGLE_MAPS_API_KEY:getApiKey()]

        multiDexEnabled true
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        signingConfig signingConfigs.release
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        applicationVariants.all { variant ->
            variant.buildConfigField "String", "GOOGLE_MAPS_API_KEY", "\""+getApiKey()+"\""
        }
    }

    buildFeatures {
        dataBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    namespace 'ru.iwater.youwater.iwaterlogistic'
}

static def getApiKey(){
    Properties props = new Properties()
    props.load(new FileInputStream(new File('secrets.properties')))
    return props['GOOGLE_API_KEY']
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.activity:activity-ktx:1.7.2"

    //std lib
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.material:material:1.9.0'

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.fragment:fragment-ktx:1.6.0'

    implementation 'android.arch.lifecycle:extensions:1.1.1'
    //timber
    implementation 'com.jakewharton.timber:timber:4.7.1'
    //cardView
    implementation 'androidx.cardview:cardview:1.0.0'

    //room
    implementation 'androidx.room:room-runtime:2.6.0-alpha01'
//    annotationProcessor "androidx.room:room-compiler:2.6.0-alpha01"
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    kapt 'androidx.room:room-compiler:2.6.0-alpha01'
    implementation 'androidx.room:room-ktx:2.6.0-alpha01'
    //dagger
//    implementation 'com.google.dagger:dagger-android:2.46'
//    implementation 'com.google.dagger:dagger-android-support:2.46'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.2.0-alpha01'

    implementation 'com.google.dagger:dagger:2.46'
    kapt 'com.google.dagger:dagger-compiler:2.46'
    //for map
    implementation 'org.osmdroid:osmdroid-android:6.1.16'

    implementation 'com.google.maps.android:android-maps-utils:2.2.0'
//    implementation 'com.google.android.gms:play-services-maps:17.0.1'
    implementation 'com.google.android.gms:play-services-location:21.0.1'
//    implementation 'com.android.support:multidex:1.0.3'


    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2'
    //lib for tests
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}
